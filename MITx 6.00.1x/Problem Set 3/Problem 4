# Problem 4
# author: @raj-ch017

"""
The Game [15.0/15.0 points (graded)]

Now you will implement the function hangman, which takes one parameter - the secretWord the user is to guess. 
This starts up an interactive game of Hangman between the user and the computer. 
Be sure you take advantage of the three helper functions, isWordGuessed, getGuessedWord, and getAvailableLetters, that you've defined in the previous part.

Hints:
You should start by noticing where we're using the provided functions (at the top of ps3_hangman.py) to load the words and pick a random one. 
Note that the functions loadWords and chooseWord should only be used on your local machine, not in the tutor. 
When you enter in your solution in the tutor, you only need to give your hangman function.
"""

def hangman(secretWord):
    '''
    secretWord: string, the secret word to guess.

    Starts up an interactive game of Hangman.

    * At the start of the game, let the user know how many 
      letters the secretWord contains.

    * Ask the user to supply one guess (i.e. letter) per round.

    * The user should receive feedback immediately after each guess 
      about whether their guess appears in the computers word.

    * After each round, you should also display to the user the 
      partially guessed word so far, as well as letters that the 
      user has not yet guessed.

    Follows the other limitations detailed in the problem write-up.
    '''
    # FILL IN YOUR CODE HERE...
    
    def helper_guess(secretWord,user_guess):      #helper function to let the user know if their guess was good or bad
        if user_guess in secretWord:
          print("Good guess: ",end="")
          return 1
        else:
          print("Oops! That letter is not in my word: ",end="")
          return 0

    def already_guessed(user_guess,lettersGuessed):     #helper function to check whether user is repeating a guess
      if user_guess in lettersGuessed:
        print("Oops! You've already guessed that letter: ",end="")
        return 'repeat'

    mistakes = 0
    total = 8
    lettersGuessed = []
    user_progress = ""
    run = 0
    check_repeat = ""

    print("Welcome to the game Hangman!")
    print("I am thinking of a word that is {} letters long.".format(len(secretWord)))
    print("--------------------------------------------------------")

    while (mistakes != 8):
      print("You have {} guesses left.".format(total - mistakes))
      avail_letters = getAvailableLetters(lettersGuessed)
      print("Available Letters: ",avail_letters)
      user_guess = input("Please guess a letter: ").lower()

      if user_guess not in lettersGuessed:
        value = helper_guess(secretWord,user_guess)

      if run != 0:
        check_repeat = already_guessed(user_guess,lettersGuessed)

      lettersGuessed.append(user_guess)
      
      user_progress = getGuessedWord(secretWord,lettersGuessed)
      
      good_to_go = isWordGuessed(secretWord, lettersGuessed)

      print(user_progress)

      if value == 0 and check_repeat != "repeat":
        mistakes += 1
      run += 1
      

      print("------------------------------------------------------")

      if good_to_go:
        print("Congratulations, you have won!")
        break


    if good_to_go != True:
      print("Sorry, you ran out of guesses. The word was {}.".format(secretWord))
